
<?php $__env->startSection('header'); ?>
    <link rel="stylesheet" type="text/css" href="<?php echo e(asset('app-assets/vendors/css/forms/selects/select2.min.css')); ?>">
    <link rel="stylesheet" type="text/css" href="<?php echo e(asset('app-assets/vendors/css/pickers/daterange/daterangepicker.css')); ?>">
    <link rel="stylesheet" type="text/css" href="<?php echo e(asset('app-assets/css/plugins/pickers/daterange/daterange.css')); ?>">
    <link rel="stylesheet" type="text/css" href="<?php echo e(asset('app-assets/css/custom/daterangepicker.css')); ?>">
    <link rel="stylesheet" type="text/css" href="<?php echo e(asset('assets/custom/air-date-picker/css/datepicker.min.css')); ?>">
    <link rel="stylesheet" type="text/css" href="<?php echo e(asset('app-assets/css/plugins/animate/animate.css')); ?>">
    <link rel="stylesheet" type="text/css" href="<?php echo e(asset('app-assets/css/custom/vouchers.css')); ?>">
    <link rel="stylesheet" type="text/css" href="<?php echo e(asset('app-assets/css/custom/add-travel-claim.css')); ?>">
<?php $__env->stopSection(); ?>

<?php $__env->startSection('body'); ?>
    <div class="content-header row">
        <div class="content-header-left col-md-6 col-10 mb-2" style="color: white">
            <h3 class="content-header-title" style="color: white"><?php echo e($panelHeading); ?></h3>
            <p>Here you can view your profile information</p>
        </div>
    </div>
    <div class="content-body">
        <section id="form-control-repeater">
            <form action="<?php echo e(URL::to($storingURL)); ?>" method="post" id="voucher-form" enctype="multipart/form-data" onsubmit="return validateForm()">
                <input type="hidden" name="_token" value="<?php echo e(csrf_token()); ?>">
                <input type="hidden" name="itemCount" id="itemCount" value="<?php echo e(isset($voucher) ? $itemCount : 1); ?>">
                <?php /* <input type="hidden" name="claimType" id="claimType" value="medicines-mother"> */ ?>
                <div class="row justify-content-center">
                    <div class="col-md-11">
                        <div class="card">
                            <div class="card-header">
                                <h4 class="card-title font-weight-bold" id="file-repeater">Your Profile</h4>
                                <a class="heading-elements-toggle"><i class="la la-ellipsis-h font-medium-3"></i></a>
                            </div>
                            <div class="card-content collapse show">
                                <div class="card-body">
                                    <div class="row">
                                        <!-- User image on the right -->
                                        <div class="col-md-3 order-md-2 text-center">
                                            <?php if($photo != null && $photo_mimetype != null): ?>
                                                <img src="data:<?php echo e($photo_mimetype); ?>;base64,<?php echo e(base64_encode($photo)); ?>"
                                                    alt="Profile Image" class="img-fluid rounded-circle w-50">
                                            <?php else: ?>
                                                <img src="<?php echo e(asset('assets/img/user-placeholder-removebg.png')); ?>"
                                                    alt="Profile Image" class="img-fluid rounded-circle w-50">
                                            <?php endif; ?>
                                            <p class="mt-2"><strong><?php echo e($employee->employee_name); ?></strong></p>
                                        </div>
                                        <!-- Profile details -->
                                        <div class="col-md-9 order-md-1 w-100 overflow-auto">
                                            <table class="table">
                                                <tbody>
                                                    <tr>
                                                        <td class="text-right"><strong>Employee ID: </strong></td>
                                                        <td><?php echo e($employee_sf_data->employee_number); ?></td>
                                                        <td class="text-right"><strong>Name: </strong></td>
                                                        <td><?php echo e($employee->employee_name); ?></td>
                                                    </tr>
                                                    <tr>
                                                        <td class="text-right"><strong>Grade: </strong></td>
                                                        <td><?php echo e($employee_sf_data->grade); ?></td>
                                                        <td class="text-right"><strong>Designation: </strong></td>
                                                        <td><?php echo e($employee_sf_data->designation); ?></td>
                                                    </tr>
                                                    <tr>
                                                        <td class="text-right"><strong>Business Unit: </strong></td>
                                                        <td><?php echo e($employee->department->BusinessUnit->bu_name); ?></td>
                                                        <td class="text-right"><strong>Department: </strong></td>
                                                        <td><?php echo e($employee->department->department_name); ?></td>
                                                    </tr>
                                                    <tr>
                                                        <td class="text-right"><strong>Company: </strong></td>
                                                        <td><?php echo e($employee->department->BusinessUnit->company->company_name); ?>

                                                        </td>
                                                        <td class="text-right"><strong>Cost Center: </strong></td>
                                                        <td><?php echo e($employee_sf_data->cost_center); ?></td>
                                                    </tr>
                                                    <tr>
                                                        <td class="text-right"><strong>Bank: </strong></td>
                                                        <td><?php echo e($employee_sf_data->bank); ?></td>
                                                        <td class="text-right"><strong>Account Number: </strong></td>
                                                        <td><?php echo e($employee_sf_data->account_number); ?></td>
                                                    </tr>

                                                    <?php if($employee->department->BusinessUnit->company->id == '1400' || $employee->department->BusinessUnit->company->id == '1700'): ?>
                                                    <tr>
                                                        <td class="text-right"><strong>Line Manager: </strong></td>
                                                        <td><?php echo e(isset($employee_sf_data->line_manager->employee->employee_name) ? $employee_sf_data->line_manager->employee->employee_name : 'Not Found'); ?>

                                                        </td>
                                                        <td class="text-right"><strong>Business Unit Approver: </strong>
                                                        </td>
                                                        <td><?php echo e(isset($employee_sf_data->BusinessUnit->bu_head->employee->employee_name) ? $employee_sf_data->BusinessUnit->bu_head->employee->employee_name : 'Not Found'); ?>

                                                        </td>
                                                    </tr>
                                                    <?php endif; ?>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                    <!-- Cost Center Section -->
                                    <?php if(isset($cost_centers)): ?>
                                    <div class="col-md-12">
                                        <div class="card">
                                            <div class="card-header">
                                                <h4 class="card-title" id="file-repeater" style="font-weight: bold;">Charge to Cost Center</h4>
                                                <a class="heading-elements-toggle"><i class="la la-ellipsis-h font-medium-3"></i></a>
                                            </div>
                                            <div class="card-content collapse show">
                                                <div class="card-body">
                                                    <div class="form-row">
                                                        <div class="form-group col-md-3 mb-2" id="costCenter">
                                                            <select class="form-control costCenter select2" style="height: 140%;" name="charged_cost_center" required>
                                                                <option value="">Select</option>
                                                                <?php foreach($cost_centers as $cost_center): ?>
                                                                    <option value="<?php echo e($cost_center->cost_center); ?>"><?php echo e($cost_center->cost_center.' - '.$cost_center->cost_center_description); ?></option>
                                                                <?php endforeach; ?>
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <?php endif; ?>
                                    
                                    <!-- Enter Details Section -->
                                    <div class="col-md-12">
                                        <hr>
                                        <div class="card">
                                            <div class="card-header">
                                                <h4 class="card-title" id="file-repeater" style="font-weight: bold;">Enter
                                                    Details</h4>
                                                <a class="heading-elements-toggle"><i
                                                        class="la la-ellipsis-h font-medium-3"></i></a>
                                                <div class="heading-elements">
                                                    <ul class="list-inline mb-0">
                                                        <li><a data-action="expand"><i class="ft-maximize"></i></a></li>
                                                    </ul>
                                                </div>
                                            </div>
                                            <div class="card-content collapse show">
                                                <div class="card-body">
                                                    <div id="rowContainer">
                                                        <?php /* Fetch categories based on the company */ ?>
                                                        <?php /* */ 
                                                        // Try a simpler query approach
                                                        $categories = \App\Category::where('company_id', $employee->department->businessUnit->company->id)
                                                            ->whereIn('category_name', ['Local - DA', 'Foreign - DA', 'Local - DA (via Air)', 'Foreign - Expenses'])
                                                            ->get();
                                                        /* */ ?>
                                                        <div id="category-form">
                                                            <!-- Label bar (only appears once, not cloned) -->
                                                            <div class="label-bar col-md-12">
                                                                <div id="category_title"
                                                                    class="col-md-2 label initial_page_load for_all_categories">
                                                                    Category<span class="required">*</span></div>
                                                                <div id="date_range"
                                                                    class="col-md-2 label initial_page_load">Date Range
                                                                    (From/To Date & Time)<span class="required">*</span>
                                                                </div>
                                                                <div id="purpose_title"
                                                                    class="col-md-1 label initial_page_load">Purpose<span
                                                                        class="required">*</span></div>
                                                                <div id="personal_days_title"
                                                                    class="col-md-1 label initial_page_load foreign_or_local_da_by_air">
                                                                    Personal Days<span>*</span></div>
                                                                <div id="accomodation_title"
                                                                    class="col-md-2 label initial_page_load foreign_or_local_da_by_air">
                                                                    Type of Accommodation<span>*</span></div>
                                                                <div id="ta_title"
                                                                    class="col-md-2 label initial_page_load foreign_or_local_da_by_air">
                                                                    Travel Order<span>*</span></div>
                                                                <div id="from_title" class="col-md-2 label local_da">
                                                                    From<span>*</span></div>
                                                                <div id="to_title" class="col-md-2 label local_da">
                                                                    To<span>*</span></div>
                                                                <div id="t_accomodation_title"
                                                                    class="col-md-2 label local_da">Accomodation
                                                                    Required<span>*</span></div>
                                                                <div id="date"
                                                                    class="col-md-2 label foreign_expense"> Date<span
                                                                        class="required">*</span></div>
                                                                <div id="expense_type"
                                                                    class="col-md-1 label foreign_expense">Expense
                                                                    Type<spanclass="required">*</spanclass=>
                                                                </div>
                                                                <div id="currency"
                                                                    class="col-md-1 label foreign_expense">
                                                                    Currency<span>*</span></div>
                                                                <div id="exchange_rate_type"
                                                                    class="col-md-1 label foreign_expense">Exchange
                                                                    Type<span>*</span></div>
                                                                <div id="exchange_rate"
                                                                    class="col-md-1 label foreign_expense">Exchange
                                                                    Rate<span>*</span></div>
                                                                <div id="amount"
                                                                    class="col-md-1 label foreign_expense">
                                                                    Amount<span>*</span></div>
                                                                <div id="forex_amount"
                                                                    class="col-md-1 label foreign_expense">Forex
                                                                    Amount<span>*</span></div>
                                                                <div id="receipt"
                                                                    class="col-md-1 label initial_page_load for_all_categories">
                                                                    Receipt<span>*</span></div>
                                                            </div>
                                                            <div id="form-rows">
                                                                <div class="form-row" id="template-row_1">
                                                                    <div id="category_bar" class="form-group col-md-2">
                                                                        <select name="category_1" id="category_1"
                                                                            class="form-control custom-input"
                                                                            style="height: 50%;"
                                                                            onchange="checkCategory(this)">
                                                                            <option value="" disabled selected>Select
                                                                                Category</option>
                                                                            <?php foreach($categories as $category): ?>
                                                                                <?php if($category->enabled): ?>
                                                                                    <option value="<?php echo e($category->id); ?>">
                                                                                        <?php echo e($category->category_name); ?>

                                                                                    </option>
                                                                                <?php endif; ?>
                                                                            <?php endforeach; ?>
                                                                        </select>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Submit Button -->
                                    <div class="col-md-12 mt-3">
                                        <button type="submit" class="btn btn-primary">Submit</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </section>
    </div>
<?php $__env->stopSection(); ?>
<?php $__env->startSection('footer'); ?>
    <script src="<?php echo e(asset('app-assets/vendors/js/forms/select/select2.full.min.js')); ?>" type="text/javascript"></script>
    <script src="<?php echo e(asset('app-assets/js/scripts/forms/select/form-select2.js')); ?>" type="text/javascript"></script>
    <script src="<?php echo e(asset('app-assets/vendors/js/pickers/pickadate/picker.js')); ?>" type="text/javascript"></script>
    <script src="<?php echo e(asset('app-assets/vendors/js/pickers/pickadate/picker.date.js')); ?>" type="text/javascript"></script>
    <script src="<?php echo e(asset('app-assets/vendors/js/pickers/pickadate/picker.time.js')); ?>" type="text/javascript"></script>
    <script src="<?php echo e(asset('app-assets/vendors/js/pickers/pickadate/legacy.js')); ?>" type="text/javascript"></script>
    <script src="<?php echo e(asset('app-assets/vendors/js/pickers/dateTime/moment-with-locales.min.js')); ?>" type="text/javascript">
    </script>
    <script src="<?php echo e(asset('app-assets/vendors/js/pickers/daterange/daterangepicker.js')); ?>" type="text/javascript">
    </script>
    <script src="<?php echo e(asset('app-assets/js/scripts/custom/daterangepicker.js')); ?>" type="text/javascript"></script>
    <script src="<?php echo e(asset('assets/custom/date.js')); ?>" type="text/javascript"></script>
    <script src="<?php echo e(asset('assets/custom/air-date-picker/js/datepicker.min.js')); ?>" type="text/javascript"></script>
    <script src="<?php echo e(asset('assets/custom/air-date-picker/js/i18n/datepicker.en.js')); ?>" type="text/javascript"></script>
    <script src="<?php echo e(asset('app-assets/js/scripts/modal/components-modal.js')); ?>" type="text/javascript"></script>
    <script>
        // setting variables
        let itemCount = 1; // Initialize itemCount to 1
        var travelOrders = <?php echo json_encode($approvedUnusedTravelOrders, JSON_HEX_TAG | JSON_HEX_AMP | JSON_HEX_APOS | JSON_HEX_QUOT); ?>


        var optionsHtml = ''; // Get the travel orders data
        $.each(travelOrders, function(index, travelOrder) {
            var optionHtml = '<option value="' + travelOrder.id + '">Order # ' + travelOrder.id + ' of PKR - ' +
                travelOrder.totalAmount + ' for ';
            $.each(travelOrder.VoucherItems, function(i, item) {
                if (item.country) {
                    optionHtml += '<small>' + item.country + ' </small>';
                } else if (item.city) {
                    optionHtml += '<small>' + item.city + ' </small>';
                }
            });
            optionHtml += '</option>';
            optionsHtml += optionHtml;
        });

        var dateRangeBarHtml =
            `<div id="date_range_bar_1" class="form-group col-md-2 mb-2"><input type="text" class="form-control custom-input date-range-picker" name="date_range_1" id="date_range_1" placeholder="YYYY-MM-DD HH:MM - YYYY-MM-DD HH:MM" required></div>`;
        var purposeBarHtml =
            `<div id="purpose_bar_1" class="form-group col-md-1 mb-2"><input type="text" class="form-control custom-input" name="purpose_1" id="purpose_1" required></div>`;
        var personalDaysBar =
            `<div class="form-group col-md-1 mb-2" id="personal_days_bar_1"><input type="text" class="form-control custom-input" name="personal_days_1" id="personal_days_1" value="0" required></div>`;
        var accomodationBar = `<div class="form-group col-md-2 mb-2" id="accomodation_food_bar_1">
            <select class="form-control select-custom" name="accomodation_food_1" style="height: 50%;">
                <option></option>
                <option value="Own Accomodation">Own Accomodation</option>
                <option value="Accomodation by Host">Accomodation by Host</option>
                <option value="Both Accomodation & Food by Host">Both Accomodation & Food by Host</option>
            </select>
            </div>`;
        var TaBar = `<div class="form-group col-md-2" id="ta_bar_1">
            <select id="travel_order_1" name="travel_order_1" class="form-control custom-input" style="height: 50%;">
                ${optionsHtml}
            </select>
            </div>`;
        var fromBar =
            `<div class="form-group col-md-2 mb-2" id="from_bar_1"><input type="text" class="form-control custom-input" name="from_1" id="from_1" value="From" required></div>`;
        var toBar =
            `<div class="form-group col-md-2 mb-2" id="to_bar_1"><input type="text" class="form-control custom-input" name="to_1" id="to_1" value="To" required></div>`;
        var t_accomodationBar = `<div class="form-group col-md-2 mb-2" id="t_accomodation_bar_1">
            <select class="form-control select-custom" name="hotel_required_1" style="height: 50%;">
                <option></option>
                <option value="1">Yes</option>
                <option value="0">No</option>
            </select>
            </div>`;
        // var attachmentIconHtml =
        //     `<div class="form-group attachment-icon" style="margin-left: 2%;margin-bottom: 2%;"><label for="attachment_1" class="attachment-label"><i class="la la-paperclip"></i></label><input type="file" id="attachment_1" name="attachment_1" class="attachment-input" style="display: none;" onchange="handleFileUpload(this)"></div>`;
        
        var attachmentIconHtml = 
            `<div class="form-group attachment-icon" style="margin-left: 2%; margin-bottom: 2%;"> <label for="attachment_1" class="attachment-label" style="cursor: pointer;"> <i class="la la-paperclip"></i> </label> <input type="file" id="attachment_1" name="attachment_1" class="attachment-input" style="display: none;" onchange="handleAttachmentChange(this)"><span id="file-name-1" class="file-name" style="margin-left: 10px; font-style: italic; color: #555;"></span> <span id="file-status-1" class="file-status" style="margin-left: 5px;"></span> </div>`;
        
        var removeRowHtml =
            `<div class="form-group col-md-1" style="margin-top: -0.5%;"><a class="btn remove-row"><i class="la la-trash-o light-blue-icon"></i></a></div>`;

        // foreign expenses form HTML
        var dateInputHtml =
            `<div class="form-group col-md-2 mb-2"><input type="date" class="form-control" name="date_" min="<?php echo e(date('Y-m-d', strtotime(date('Y-m-d') . ' - 3 months'))); ?>"></div>`;
        var descriptionSelectHtml = `<div class="form-group col-md-1 mb-2">
            <select class="form-control select-custom" name="description_" style="height: 50%;" required>
                <option value="Taxi">Taxi</option>
                <option value="Train">Train</option>
                <option value="Air">Air</option>
                <option value="Sim charges">Sim charges</option>
                <option value="Other charges">Other charges</option>
            </select>
            </div>`;
        var currencySelectHtml = `<div class="form-group col-md-1 mb-2">
            <select class="form-control select-custom" name="cur_" style="height: 50%;" required>
                <option value="EUR">EUR</option>
                <option value="USD">USD</option>
                <option value="CAD">CAD</option>
                <option value="ZAR">ZAR</option>
                <option value="AED">Dirham</option>
                <option value="CHF">Swiss Franc</option>
                <option value="SEK">Swedish Krona</option>
                <option value="SAR">Riyal</option>
                <option value="TRY">Turkish Lira</option>
                <option value="CNY">Chinese Yuan</option>
                <option value="LBP">Lebanese Rupee</option>
                <option value="KRW">South Korean won</option>
                <option value="SGD">Singapore Dollar</option>
                <option value="UZS">Uzbekistan (UZS)</option>
                <option value="KZT">Kazakhstan (KZT)</option>
                <option value="KES">Kenyan Shillings (KES)</option>
                <option value="THB">Thai Baht (THB)</option>
                </select>
            </div>`;
        var exchangeSelectHtml = `<div class="form-group col-md-1 mb-2">
            <select onchange="exchangeRate()" id="exc_" class="form-control select-custom" name="exc_" style="height: 50%;" required>
                <option value="0">API</option>
                <option value="1">Manual</option>
            </select>
            </div>`;
        var manualExchangeInputHtml = `<div class="form-group col-md-1 mb-2" id="manual_exchange_">
            <input type="text" class="form-control" value="0" name="manual_exchange_rate_" required disabled></div>`;
        var forexAmountInputHtml = `<div class="form-group col-md-1 mb-2">
            <input type="text" class="form-control" value="0" name="forex_amount_" id="forex_amount_" required></div>`;
        var amountInputHtml =
            `<div class="form-group col-md-1 mb-2"><input type="text" class="form-control" value="0" name="amount_" id="amount_" readonly></div>`;
        var receiptProvidedSelectHtml = `<div class="form-group col-md-1 mb-2">
            <select class="form-control select-custom" name="receipt_provided_" style="height: 50%;" required>
                <option value="1">Yes</option>
                <option value="0">No</option>
            </select>
            </div>`;
        var hiddenCategoryInputHtml = `<input type="hidden" name="category_" value="">`;
        var addMoreButtonHtml =
            `<div id="add_row_btn_div" class="col-md-12"><button type="button" class="btn btn-light btn-sm rounded" onclick="foreignExpensesFields()" id="add-row-btn">Add</button></div>`;
        
        var addMoreButtonLocalDAHtml =
            `<div id="add_row_btn_div" class="col-md-12"><button type="button" class="btn btn-light btn-sm rounded" onclick="localDAFields()" id="add-row-btn">Add</button></div>`;
            
        $(document).ready(function() {
            // show Foreign - DA and Local - DA (via Air) headers by default
            $('.label-bar div:not(.initial_page_load)').hide();
            // show Foreign - DA and Local - DA (via Air) fields by default
            foreignDALocalDAByAirFields();
        });
    </script>
    <script>
        function checkCategory(selectElement) {
            const categoryName = selectElement.options[selectElement.selectedIndex].text.trim();
            const rowIndex = selectElement.name.split('_')[1];
            // local - DA
            if (categoryName === 'Local - DA') {
                $('.local_da').show();
                $('.foreign_or_local_da_by_air').hide();
                $('.foreign_expense').hide();
                $('#category_bar').nextAll().remove();
                localDAFields(rowIndex, selectElement.value);
            }
            else if (categoryName === 'Local - DA (via Air)') {
                $('.local_da').hide();
                $('.foreign_or_local_da_by_air').show();
                $('.foreign_expense').hide();
                $('#category_bar').nextAll().remove();
                LocalDAByAirFields(rowIndex, selectElement.value);
            }
            // Foreign - DA || Local - DA (via Air)
            else if (categoryName === 'Foreign - DA') {
                $('.local_da').hide();
                $('.foreign_or_local_da_by_air').show();
                $('.foreign_expense').hide();
                $('#category_bar').nextAll().remove();
                foreignDALocalDAByAirFields(rowIndex, selectElement.value);
            }
            // Foreign - Expenses
            else if (categoryName === 'Foreign - Expenses') {
                $('.label-bar div:not(.foreign_expense)').hide();
                $('.foreign_expense').show();
                $('.for_all_categories').show();
                $('#category_bar').nextAll().remove();
                foreignExpensesFields(rowIndex, selectElement.value);
            } else {
                alert('Oops! Something went wrong. Conact Support.');
            }
        }

        // Function to create the Local DA form directly in the page
        function localDAFields(count, categoryID,addAnotherFieldSet = false) {
            if (addAnotherFieldSet) {
                count = parseInt(document.getElementById('itemCount').value);
                count++;
                document.getElementById('itemCount').value = count;
                var categoryBar = `<div class="form-row" id="template-row_${count}"><div id="category_bar" class="form-group col-md-2">
                    <select name="category_1" id="category_1" class="form-control custom-input" style="height: 50%;" disabled>
                        <option value="" selected>Local - DA</option>
                        </select>
                        </div>`;
                        $('#add_row_btn_div').remove();

            }
            const countStr = `_${count}`;
            
            var fields = dateRangeBarHtml.replace(/_1/g, countStr)
              + purposeBarHtml.replace(/_1/g, countStr)
              + fromBar.replace(/_1/g, countStr)
              + toBar.replace(/_1/g, countStr)
              + t_accomodationBar.replace(/_1/g, countStr)
              + attachmentIconHtml.replace(/_1/g, countStr)
              + hiddenCategoryInputHtml.replace('name="category_"', `name="category_${count}"`).replace('value=""',
                    `value="${categoryID}"`)
              + addMoreButtonLocalDAHtml.replace('localDAFields()', `localDAFields(${count}, ${categoryID}, true)`);


            // Add the new fields after the category bar
            if (addAnotherFieldSet) {
                $(`#template-row_${count-1}`).after(categoryBar + fields + '</div>'); // -1 to target the previous row
            }
            else {
                $('#category_bar').after(fields);
            }
            console.log(count);
            $('.date-range-picker').daterangepicker({
                timePicker: true,
                timePicker24Hour: true,
                timePickerSeconds: false, // Set to true if you want seconds selection
                locale: {
                    format: 'YYYY-MM-DD HH:mm' // Display format for date and time
                },
                autoUpdateInput: true,
            });
        }
        // function localDAFields() {
        //     var fields = dateRangeBarHtml + purposeBarHtml + fromBar + toBar + t_accomodationBar + attachmentIconHtml;
        //     // Add the new fields after the category bar
        //     $('#category_bar').after(fields);
        //     $('.date-range-picker').daterangepicker({
        //         timePicker: true,
        //         timePicker24Hour: true,
        //         timePickerSeconds: false, // Set to true if you want seconds selection
        //         locale: {
        //             format: 'YYYY-MM-DD HH:mm' // Display format for date and time
        //         },
        //         autoUpdateInput: true,
        //     });
        // }
        // Function to create the Local - DA (via Air) form directly in the page
        function LocalDAByAirFields() {
            var fields = dateRangeBarHtml + purposeBarHtml + personalDaysBar + t_accomodationBar + TaBar + attachmentIconHtml;
            // Add the new fields after the category bar
            $('#category_bar').after(fields);
            $('.date-range-picker').daterangepicker({
                timePicker: true,
                timePicker24Hour: true,
                timePickerSeconds: false, // Set to true if you want seconds selection
                locale: {
                    format: 'YYYY-MM-DD HH:mm' // Display format for date and time
                },
                autoUpdateInput: true,
            });
        }

        // Function to create the foreign expenses form directly in the page
        function foreignDALocalDAByAirFields() {
            var fields = dateRangeBarHtml + purposeBarHtml + personalDaysBar + accomodationBar + TaBar + attachmentIconHtml;
            // Add the new fields after the category bar
            $('#category_bar').after(fields);
            $('.date-range-picker').daterangepicker({
                timePicker: true,
                timePicker24Hour: true,
                timePickerSeconds: false, // Set to true if you want seconds selection
                locale: {
                    format: 'YYYY-MM-DD HH:mm' // Display format for date and time
                },
                autoUpdateInput: true,
            });
        }

        // Function to create the foreign expenses form directly in the page
        function foreignExpensesFields(count, categoryID, addAnotherFieldSet = false) {
            if (addAnotherFieldSet) {
                count = parseInt(document.getElementById('itemCount').value);
                count++;
                document.getElementById('itemCount').value = count;
                var categoryBar = `<div class="form-row" id="template-row_${count}"><div id="category_bar" class="form-group col-md-2">
                    <select name="category_1" id="category_1" class="form-control custom-input" style="height: 50%;" disabled>
                        <option value="" selected>Foreign - Expense</option>
                        </select>
                        </div>`;
                        $('#add_row_btn_div').remove();

            }
            var fields = dateInputHtml.replace('name="date_"', `name="date_${count}"`) +
                descriptionSelectHtml.replace('name="description_"', `name="description_${count}"`) +
                currencySelectHtml.replace('name="cur_"', `name="cur_${count}"`) +
                exchangeSelectHtml.replace('id="exc_"', `id="exc_${count}"`).replace('name="exc_"', `name="exc_${count}"`)
                .replace('exchangeRate()', `exchangeRate(${count})`) +
                manualExchangeInputHtml.replace('name="manual_exchange_rate_"', `name="manual_exchange_rate_${count}"`)
                .replace('id="manual_exchange_"', `id="manual_exchange_${count}"`) +
                forexAmountInputHtml.replace('name="forex_amount_"', `name="forex_amount_${count}"`).replace(
                    'id="forex_amount_"', `id="forex_amount_${count}"`) +
                amountInputHtml.replace('name="amount_"', `name="amount_${count}"`).replace('id="amount_"',
                    `id="amount_${count}"`) +
                receiptProvidedSelectHtml.replace('name="receipt_provided_"', `name="receipt_provided_${count}"`) +
                hiddenCategoryInputHtml.replace('name="category_"', `name="category_${count}"`).replace('value=""',
                    `value="${categoryID}"`) +
                addMoreButtonHtml.replace('foreignExpensesFields()',
                    `foreignExpensesFields(${count}, ${categoryID}, true)`);
            //  Add the new fields after the category bar
            if (addAnotherFieldSet) {
                $(`#template-row_${count-1}`).after(categoryBar + fields + '</div>'); // -1 to target the previous row
            }
            else {
                $('#category_bar').after(fields);
            }
            $('.date-range-picker').daterangepicker({
                timePicker: true,
                timePicker24Hour: true,
                timePickerSeconds: false, // Set to true if you want seconds selection
                locale: {
                    format: 'YYYY-MM-DD HH:mm' // Display format for date and time
                },
                autoUpdateInput: true,
            });
            // Add event handler for forex amount changes
            $(`#forex_amount_${count}`).on('change', function() {
                updateForexAmount(count);
            });
        }

        // Function to update forex amount
        function updateForexAmount(rowIndex) {
            var amount = $(`#forex_amount_${rowIndex}`).val();
            var exchangeType = $(`#exc_${rowIndex}`).val();
            var currency = $(`select[name='cur_${rowIndex}']`).val();

            if (exchangeType == "0") {
                // Fetch exchange rate from API
                $.ajax({
                    url: "/get/exchange-rate/" + currency,
                    method: "GET",
                    success: function(response) {
                        var rate = JSON.parse(response).rate;
                        var convertedAmount = amount * rate;
                        $(`#amount_${rowIndex}`).val(convertedAmount.toFixed(2));
                    },
                    error: function() {
                        // If API fails, use a default rate
                        var convertedAmount = amount * 1;
                        $(`#amount_${rowIndex}`).val(convertedAmount.toFixed(2));
                    }
                });
            } else {
                // Use manual exchange rate
                var rate = $(`input[name='manual_exchange_rate_${rowIndex}']`).val();
                // Just display the amount without conversion
                $(`#amount_${rowIndex}`).val(amount);
            }
        }

        // Add event listener for removing expense rows
        $(document).on('click', '.remove-expense-row', function() {
            $(this).closest('.form-row').remove();
        });
    </script>

    <script>
        var categoriesDetailCount = parseInt($('#categoriesDetailCount').val());
        itemCount = parseInt($('#itemCount').val());
        var categoriesCount = parseInt($('#categoriesCount').val());
        $('body').on('change', 'select.voucherCategory', function(evt) {
            var category = $(this).find(':selected').data('view');
            var categoryContainer = $(this);
            var categoryID = $(this).val();
            evt.preventDefault();
            categoriesDetailCount = categoriesDetailCount + 1;
            itemCount = itemCount + 1;
            $('#categoriesDetailCount').val(categoriesDetailCount);
            var element_id = $(this).attr('id');
            if ($("[data-parent='" + element_id + "']").length) {
                alert('Details already exist against this selection. Please add more selection.');
            } else {
                // console.log(category);
                if ($('#' + category).length) {
                    alert('Oh! This Category Already Exist.');
                } else {
                    $.ajax({
                        url: "<?php echo e(URL::to('voucher/category/form/display')); ?>/" + "misc" + "/parent/" +
                            element_id + '/item/' + itemCount + '/id/' + categoryID,
                        method: "GET",
                        data: {
                            type: "<?php echo $type; ?>",
                        },
                        success: function(response) {
                            $("#rowContainer").append(JSON.parse(response).row);
                            $("#itemCount").val(itemCount);
                            categoryContainer.attr('disabled', true);

                            if (category == 'hotel-stay-pakistan') {
                                $('.datetimeHotelStay').daterangepicker({
                                    timePicker: false,
                                });
                            } else if (category == 'out-of-lahore-meal' || category ==
                                'out-of-office-meal') {
                                $('.mealOutOfLahore').datepicker({
                                    language: 'en',
                                    multipleDates: true
                                });
                            } else {
                                $('.datetime').daterangepicker({
                                    timePicker: true,
                                    timePicker24Hour: true,
                                    timePickerIncrement: 1,
                                    maxSpan: 3,
                                    locale: {
                                        format: 'MM/DD/YYYY HH:mm'
                                    }
                                });
                            }
                        }
                    });
                }
            }
        }).on('click', '#addVoucherItem', function() {
            itemCount = itemCount + 1;
            var element_id = $(this).data('category');
            var categoryID = $(this).data('category-id');
            $.ajax({
                url: "<?php echo e(URL::to('item/add')); ?>/" + itemCount + "/parent/" + element_id + '/id/' +
                    categoryID,
                method: "GET",
                data: {
                    type: "<?php echo $type; ?>"
                },
                success: function(response) {
                    $("#" + element_id).closest('div').find('.card-body').append(JSON.parse(response)
                        .row);
                    $("#itemCount").val(itemCount);
                    if (element_id == 'hotel-stay-pakistan') {
                        $('.datetime').daterangepicker({
                            timePicker: false,
                        });
                    } else if (element_id == 'out-of-lahore-meal' || element_id ==
                        'out-of-office-meal') {
                        $('.mealOutOfLahore').datepicker({
                            language: 'en',
                            multipleDates: true
                        });
                    } else {
                        $('.datetime').daterangepicker({
                            timePicker: true,
                            timePicker24Hour: true,
                            timePickerIncrement: 1,
                            locale: {
                                format: 'MM/DD/YYYY HH:mm'
                            }
                        });
                    }
                }
            });
        }).on('change', "input[name^='kms_']", function() {
            var category = $('#' + $(this).closest('div.card').data('parent') + ' option:selected').text();
            var totalAmountContainer = $('#total_' + $(this).closest('div.card').data('parent'));
            if (category == 'Fuel - Mileage (within city)' || category == 'Fuel - Mileage (out of city)') {
                var kms = $(this).val();
                var from = $(this).closest('div.form-row').find("input[name^='date_']").val();

                var amount = 0;
                var amountContainer = $(this).closest('div.form-row').find("input[name^='amount_']");
                var mode_of_travel = $(this).closest('div.form-row').find("select[name^='mode_of_travel_']").val();
                var totalAmount = totalAmountContainer.val() - amountContainer.val();
                $.ajax({
                    url: "<?php echo e(URL::to('get/rate')); ?>/" + mode_of_travel + "/" + from,
                    success: function(response) {
                        var res = JSON.parse(response);
                        amount = kms * res[0].amount;
                        amountContainer.val(amount.toFixed(0));
                        totalAmount = parseInt(totalAmount) + parseInt(amount);
                        console.log(totalAmount);
                        totalAmountContainer.val(totalAmount.toFixed(0));
                    }
                });
            }
        }).on('change', "select[name^='mode_of_travel_']", function() {
            var category = $('#' + $(this).closest('div.card').data('parent') + ' option:selected').text();
            if (category == 'Fuel - Mileage (within city)' || category == 'Fuel - Mileage (out of city)') {
                var totalAmountContainer = $('#total_' + $(this).closest('div.card').data('parent'));
                var kmsContainer = $(this).closest('div.form-row').find("input[name^='kms_']");
                var amountContainer = $(this).closest('div.form-row').find("input[name^='amount_']");
                var totalAmount = totalAmountContainer.val() - amountContainer.val();
                kmsContainer.val(0);
                amountContainer.val(0);
                totalAmount = parseInt(totalAmount);
                totalAmountContainer.val(totalAmount.toFixed(0));
            }
        }).on('change', "input[name^='rate_per_litre_']", function() {
            var amountPaid = $(this).closest('div.form-row').find("input[name^='amount_paid_']").val();
            var ratePerLitre = $(this).val();
            var litres = amountPaid / ratePerLitre;
            $(this).closest('div.form-row').find("input[name^='litres_']").val(litres.toFixed(2))
        }).on('change', "input[name^='amount_paid_']", function() {
            var category = $('#' + $(this).closest('div.card').data('parent') + ' option:selected').text();
            if (category == 'Fuel - Receipts' || category == 'Local - Transport') {
                var totalAmountContainer = $('#total_' + $(this).closest('div.card').data('parent'));
                var amountContainer = $(this).closest('div.form-row').find("input[name^='amount_']");
                var amountPaidContainer = $(this).closest('div.form-row').find("input[name^='amount_paid_']");

                var totalAmount = totalAmountContainer.val() - amountContainer.val();
                var amount = amountPaidContainer.val();
                amountContainer.val(parseInt(amount).toFixed(0));
                totalAmount = parseInt(totalAmount) + parseInt(amount);
                totalAmountContainer.val(totalAmount.toFixed(0));

                if (category == 'Fuel - Receipts') {
                    var ratePerLitre = $(this).closest('div.form-row').find("input[name^='rate_per_litre_']").val();
                    var amountPaid = $(this).val();
                    if (ratePerLitre > 0) {
                        var litres = amountPaid / ratePerLitre;
                        $(this).closest('div.form-row').find("input[name^='litres_']").val(litres)
                    }
                }
            } else if (category == 'Meal - Entertainment' || category ==
                'Local - Toll tax / Parking charges / E-Tag' || category == 'Misc' || category == 'Courier' ||
                category == 'Employee Amenities-Guest house/Rest house' || category ==
                'Employee Amenities-Sales office' || category ==
                'Local - Toll tax / Parking charges / E-Tag (out of city)' || category == 'Mobile - Card / PTCL' ||
                category == 'Medicals – Mother' || category == 'Motor Car income tax claim' || category ==
                'Vehicle Repair/Maintenance' || category == 'Other Amenities' || category == 'Material Sample' ||
                category == 'Fee & Subscription') {
                var totalAmountContainer = $('#total_' + $(this).closest('div.card').data('parent'));
                var amountContainer = $(this).closest('div.form-row').find("input[name^='amount_']");
                var amountPaidContainer = $(this).closest('div.form-row').find("input[name^='amount_paid_']");
                var totalAmount = totalAmountContainer.val() - amountContainer.val();
                var amount = amountPaidContainer.val();

                amountContainer.val(parseInt(amount).toFixed(0));
                totalAmount = parseInt(totalAmount) + parseInt(amount);
                totalAmountContainer.val(totalAmount.toFixed(0));
            } else if (category == 'Local - Hotel Stay') {
                var amountToBePaidContainer = $(this).closest('div.form-row').find(
                    "input[name^='amount_to_be_paid_']");
                var tripDuration = ($(this).closest('div.form-row').find("input[name^='date_range_']").val()).split(
                    "-");
                var amountPaidContainer = $(this);
                var amountContainer = $(this).closest('div.form-row').find("input[name^='amount_']");
                var totalAmountContainer = $('#total_' + $(this).closest('div.card').data('parent'));
                var diffDays = $(this).closest('div.form-row').find("input[name^='duration_']").val();
                var from = $.format.date(new Date(tripDuration[0].split(' ')[0]), "yyyy-MM-dd");

                var totalAmount = totalAmountContainer.val() - amountContainer.val();
                var amount = $(this).val();
                var allowedAmount = 0;
                amountContainer.val(amount);
                amountToBePaidContainer.val(amount);
                totalAmount = parseInt(totalAmount) + parseInt(amount);
                totalAmountContainer.val(totalAmount);
                amountPaidContainer.val(amount);
            } else if (category == 'Mobile - Handset') {
                var amountToBePaidContainer = $(this).closest('div.form-row').find(
                    "input[name^='amount_to_be_paid_']");
                var amountPaidContainer = $(this);
                var amountContainer = $(this).closest('div.form-row').find("input[name^='amount_']");
                var totalAmountContainer = $('#total_' + $(this).closest('div.card').data('parent'));
                var date = $(this).closest('div.form-row').find("input[name^='date_']").val();
                var from = $.format.date(new Date(), "yyyy-MM-dd");
                var totalAmount = totalAmountContainer.val() - amountContainer.val();
                var amount = $(this).val();
                var allowedAmount = 0;
                $.ajax({
                    url: "<?php echo e(URL::to('get/rate')); ?>/" + category + "/" + date,
                    success: function(response) {
                        var res = JSON.parse(response);
                        if (res[0].amount == -1) {
                            amountContainer.val(amount);
                            amountToBePaidContainer.val(amount);
                            totalAmount = parseInt(totalAmount) + parseInt(amount);
                            totalAmountContainer.val(totalAmount);
                            amountPaidContainer.val(amount);
                        } else {
                            allowedAmount = res[0].amount;
                            if (allowedAmount <= amount) {
                                amountContainer.val(allowedAmount.toFixed(0));
                                amountToBePaidContainer.val(allowedAmount.toFixed(0));
                                totalAmount = parseInt(totalAmount) + parseInt(allowedAmount);
                                totalAmountContainer.val(totalAmount);
                                amountPaidContainer.val(amount);
                            } else {
                                amountContainer.val(amount);
                                amountToBePaidContainer.val(amount);
                                totalAmount = parseInt(totalAmount) + parseInt(amount);
                                totalAmountContainer.val(totalAmount);
                                amountPaidContainer.val(amount);
                            }
                        }
                    }
                })
            }
        }).on('focusout', "input[name^='kms_']", function() {
            var category = $('#' + $(this).closest('div.card').data('parent') + ' option:selected').text();
            var totalAmountContainer = $('#total_' + $(this).closest('div.card').data('parent'));
            console.log(category);
            if (category == 'Local - DA') {
                var kms = $(this).val();
                if (kms != '') {
                    var daDays = 0;
                    var amount = 0;
                    if (kms >= 100) {
                        var tripDuration = ($(this).closest('div.form-row').find("input[name^='date_range_']")
                            .val()).split("-");
                        var amountContainer = $(this).closest('div.form-row').find("input[name^='amount_']");
                        var eligiblePeriodContainer = $(this).closest('div.form-row').find(
                            "input[name^='da_eligible_period_']");
                        var daFrom = tripDuration[0].trim();
                        var daTo = tripDuration[1].trim();
                        var from = $.format.date(new Date(tripDuration[0].split(' ')[0]), "yyyy-MM-dd");
                        $.ajax({
                            url: "<?php echo e(URL::to('calculate/days')); ?>",
                            method: "POST",
                            data: {
                                daFrom: daFrom,
                                daTo: daTo
                            },
                            success: function(response) {
                                daDays = JSON.parse(response);
                                var totalAmount = totalAmountContainer.val() - amountContainer.val();
                                eligiblePeriodContainer.val(daDays);
                                if (daDays >= 0) {
                                    $.ajax({
                                        url: "<?php echo e(URL::to('get/rate')); ?>/" + category + "/" +
                                            from,
                                        success: function(response) {
                                            var res = JSON.parse(response);
                                            amount = daDays * res[0].amount;
                                            amountContainer.val(amount);
                                            totalAmount = parseInt(totalAmount) + parseInt(
                                                amount);
                                            totalAmountContainer.val(totalAmount);
                                        }
                                    });
                                }
                            }
                        });
                    } else {
                        alert('D.A not allowed. Minimum distance eligible for D.A is 100 Kms round trip');
                        $(this).closest('div.form-row').find("input[name^='da_eligible_period_']").val('');
                        $(this).closest('div.form-row').find("input[name^='amount_']").val('');
                    }
                }
            }
        }).on('focusout', "input[name^='date_range_']", function() {
            var category = $('#' + $(this).closest('div.card').data('parent') + ' option:selected').text();
            var totalAmountContainer = $('#total_' + $(this).closest('div.card').data('parent'));
            if (category == 'Local - DA (via Air)') {
                var daDays = 0;
                var amount = 0;
                var tripDuration = ($(this).closest('div.form-row').find("input[name^='date_range_']").val()).split(
                    "-");
                var eligiblePeriodContainer = $(this).closest('div.form-row').find(
                    "input[name^='da_eligible_period_']");
                var amountContainer = $(this).closest('div.form-row').find("input[name^='amount_']");
                var daFrom = tripDuration[0].trim();
                var daTo = tripDuration[1].trim();
                var from = $.format.date(new Date(tripDuration[0].split(' ')[0]), "yyyy-MM-dd");
                $.ajax({
                    url: "<?php echo e(URL::to('calculate/days')); ?>",
                    method: "POST",
                    data: {
                        daFrom: daFrom,
                        daTo: daTo
                    },
                    success: function(response) {
                        daDays = JSON.parse(response);
                        eligiblePeriodContainer.val(daDays);
                        if (amountContainer.length > 0) {
                            console.log(amountContainer);
                            var totalAmount = totalAmountContainer.val() - amountContainer.val();
                            if (daDays >= 0) {
                                $.ajax({
                                    url: "<?php echo e(URL::to('get/rate')); ?>/" + category + "/" + from,
                                    success: function(response) {
                                        var res = JSON.parse(response);
                                        amount = daDays * res[0].amount;
                                        amountContainer.val(amount);
                                        totalAmount = parseInt(totalAmount) + parseInt(
                                            amount);
                                        totalAmountContainer.val(totalAmount);
                                    }
                                });
                            }
                        }
                    }
                });
            }
        }).on('change', "select[name^=accomodation_food_], select[name^=currency_]", function() {
            var category = $('#' + $(this).closest('div.card').data('parent') + ' option:selected').text();
            if (category == 'Foreign - DA') {
                var amount = 0;
                var accomodation_food = $(this).val();
                var eligiblePeriodContainer = $(this).closest('div.form-row').find(
                    "input[name^='da_eligible_period_']");
                var amountContainer = $(this).closest('div.form-row').find("input[name^='amount_']");
                var currencyContainer = $(this).closest('div.form-row').find("select[name^='currency_']");
                var forexAmountContainer = $(this).closest('div.form-row').find("select[name^='currency_']");
                var localAmountContainer = $(this).closest('div.form-row').find("select[name^='local_amount_']");
                if (accomodation_food) {
                    var tripDuration = ($(this).closest('div.form-row').find("input[name^='date_range_']").val())
                        .split("-");
                    var personalDays = $(this).closest('div.form-row').find("input[name^='personal_days_']").val();
                    var diffDays = 0;
                    var daFrom = tripDuration[0].trim();
                    var daTo = tripDuration[1].trim();
                    var from = $.format.date(new Date(tripDuration[0].split(' ')[0]), "yyyy-MM-dd");
                    $.ajax({
                        url: "<?php echo e(URL::to('calculate/days')); ?>",
                        method: "POST",
                        data: {
                            daFrom: daFrom,
                            daTo: daTo
                        },
                        success: function(response) {
                            console.log('Response: ' + response);
                            diffDays = JSON.parse(response);
                            foreignRateCalculation();
                        }
                    });

                    function foreignRateCalculation() {
                        if (personalDays < diffDays) {
                            diffDays = diffDays - personalDays;
                            if (accomodation_food == 'Own Accomodation') {
                                eligiblePeriodContainer.val((diffDays).toFixed(1));
                            } else if (accomodation_food == 'Accomodation by Host') {
                                eligiblePeriodContainer.val((diffDays / 2).toFixed(1));
                            } else if (accomodation_food == 'Both Accomodation & Food by Host') {
                                eligiblePeriodContainer.val((diffDays / 3).toFixed(1));
                            }
                            var eligible_period = eligiblePeriodContainer.val();
                            $.ajax({
                                url: "<?php echo e(URL::to('get/rate')); ?>/" + category + "/" + from,
                                success: function(response) {
                                    var res = JSON.parse(response);
                                    amount = eligible_period * res[0].amount;
                                    amountContainer.val(amount);
                                }
                            })
                        } else {
                            alert('Personal days must be less than DA days');
                            $(this).closest('div.form-row').find("input[name^='personal_days_']").val(0)
                        }
                    }
                } else {
                    eligiblePeriodContainer.val(0);
                    amountContainer.val(0);
                }
            }
        }).on('change', "input[name^=date_range_]", function() {
            var category = $('#' + $(this).closest('div.card').data('parent') + ' option:selected').text();
            if (category == 'Local - Hotel Stay') {
                var durationContainer = $(this).closest('div.form-row').find("input[name^='duration_']");

                var tripDuration = ($(this).closest('div.form-row').find("input[name^='date_range_']").val()).split(
                    "-");
                var dateFrom = new Date((tripDuration[0]).trim());
                var dateTo = new Date((tripDuration[1]).trim());
                var timeDiff = Math.abs(dateTo.getTime() - dateFrom.getTime());
                var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));
                diffDays = diffDays + 1;
                durationContainer.val(diffDays);
            }
        }).on('change', "input[name^=forex_amount_]", function() {
            var category = $('#' + $(this).closest('div.card').data('parent') + ' option:selected').text();
            if (category == 'Foreign - Expenses') {
                var amountContainer = $(this).closest('div.form-row').find("input[name^='amount_']");

                var totalAmountContainer = $('#total_' + $(this).closest('div.card').data('parent'));
                var totalAmount = totalAmountContainer.val() - amountContainer.val();
                var amount = $(this).val();
                amountContainer.val(amount);
                totalAmount = parseInt(totalAmount) + parseInt(amount);
                totalAmountContainer.val(totalAmount);
            }
        }).on('change', "select[name^=description_]", function() {
            var category = $('#' + $(this).closest('div.card').data('parent') + ' option:selected').text();
            if (category == 'Meal - Out of office' || category == 'Meal - Out of Lahore Posting') {
                var amountContainer = $(this).closest('div.form-row').find("input[name^='amount_']");
                var meal_dates = $(this).closest('div.form-row').find("input[name^='meal_dates_']");
                var description = $(this).closest('div.form-row').find("select[name^='description_']").val();
                var totalAmountContainer = $('#total_' + $(this).closest('div.card').data('parent'));
                var amount = 0;
                var mealDays = meal_dates.val().split(',');
                mealDays = mealDays.length;
                var from = $(this).closest('div.form-row').find("select[name^='date_']").val();
                var totalAmount = totalAmountContainer.val() - amountContainer.val();
                $.ajax({
                    url: "<?php echo e(URL::to('get/rate')); ?>/" + description + "/" + from,
                    success: function(response) {
                        var res = JSON.parse(response);
                        amount = res[0].amount * mealDays;
                        amountContainer.val(amount);
                        totalAmount = parseInt(totalAmount) + parseInt(amount);
                        totalAmountContainer.val(totalAmount.toFixed(0));
                    },
                    error: function(response) {
                        console.log(response);
                    }
                });

            }
        }).on('change', "select[name^=travel_order_]", function() {
            if ($(this).val() != "") {
                if ($(this).val() == $("select[name^=travel_order_]").not(this).val()) {
                    alert('You have already selected this travel order for another line item.');
                    $(this).val("");
                }
            }
        }).on('click', '#removeCategory', function() {
            if (confirm('Are you sure you want to remove this ?')) {
                var categoryContainer = $(this).closest('div.form-row');
                var categoryItemsContainer = $(this).closest('div.form-row').find(
                    "select[name^='voucher_categories_'] option:selected");
                $('#' + categoryItemsContainer.data('view')).remove();
                categoryContainer.remove();
            }

        }).on('click', '#removeCategoryItem', function() {
            if (confirm('Are you sure you want to remove this ?')) {
                var categoryItemContainer = $(this).closest('div.form-row');
                var totalAmountContainer = $('#total_' + $(this).closest('div.card').data('parent'));
                var amountContainer = $(this).closest('div.form-row').find("input[name^='amount_']");

                var totalAmount = totalAmountContainer.val() - amountContainer.val();
                totalAmountContainer.val(totalAmount);
                categoryItemContainer.remove();
            }
        }).on('change', '.datetimeOutOfLahore', function() {
            var duration = ($(this).closest('div.form-row').find("input[name^='date_range_']").val()).split("-");
            var dateFrom = new Date((duration[0]).trim());
            var dateTo = new Date((duration[1]).trim());

            var timeDiff = Math.abs(dateTo.getTime() - dateFrom.getTime());
            var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));
        }).on('change', '.official_travel', function() {
            if ($(this).val() == 'Yes') {
                if (confirm('Are you sure that you were on official travel other than Kasur')) {
                    $(this).val('Yes');
                } else {
                    $(this).val('No');
                }
            }
        }).on('change', '.country', function() {
            if (confirm('Are you sure country is not available in list ?')) {
                var otherCountryContainer = $(this).closest('div.form-row').find("input[name^='country_']");
                $(otherCountryContainer).attr('hidden', false);
                $(otherCountryContainer).attr('disabled', false);
                $(this).attr('hidden', true);
                $(this).attr('disabled', true);
            }
        });
    </script>
    <script>
        $('#chargeTo').on('change', function() {
            if ($(this).val() == 'Cost Center') {
                $('#costCenter').removeAttr('hidden');
                $('.costCenter').attr('required', true);
                $('.costCenter').addClass('select2');
                $('.select2').select2();
                $('#orderNumber').attr('hidden', true);
                $('#orderNumber').removeAttr('required');
            } else if ($(this).val() == 'Order') {
                $('.costCenter').removeAttr('required');
                $('.costCenter').next('.select2-container').hide();
                $('#costCenter').attr('hidden', true);
                $('#orderNumber').removeAttr('hidden');
                $('#orderNumber').attr('required', true);
            } else {
                $('.costCenter').removeAttr('required');
                $('.costCenter').next('.select2-container').hide();
                $('#costCenter').attr('hidden', true);
                $('#orderNumber').removeAttr('hidden');
                $('#orderNumber').attr('hidden', true);
            }
        });
        $('#addCategory').click(function(evt) {
            evt.preventDefault();
            if ($('#voucher_categories_' + categoriesCount).val() == "") {
                alert('You cannot add more categories without completing the first category');
            } else {
                categoriesCount = categoriesCount + 1;
                $('#categoriesCount').val(categoriesCount);
                $.ajax({
                    url: "<?php echo e(URL::to('voucher/category/add')); ?>/" + categoriesCount,
                    data: {
                        type: "<?php echo $type; ?>",
                    },
                    success: function(response) {
                        $("#rowContainer").append(JSON.parse(response).row);
                        $('.select2').select2({
                            tags: true
                        });
                    }
                });
            }
        });

        function localRateCalculation(from) {
            $.ajax({
                url: "<?php echo e(URL::to('calculate/forex-to-local')); ?>" + "/" + from,
                success: function(response) {
                    var ress = JSON.parse(response);
                }
            });
        }
    </script>
    <?php if(isset($voucher)): ?>
        <script>
            $(document).ready(function() {
                $('.card-content').addClass('show');
                $('.select2').select2({
                    tags: true
                });
            })
        </script>
    <?php endif; ?>
    <script>
        $('#voucher-form').on('keypress', function(e) {
            var key = e.charCode || e.keyCode || 0;
            if (key == 13) {
                e.preventDefault();
            }
        })
    </script>
    <script>
        function exchangeRate(rowIndex) {
            var exchangeType = $(`#exc_${rowIndex}`).val();

            if (exchangeType == "1") {
                // Show manual exchange rate field when "Enter Manually" is selected
                $(`#manual_exchange_${rowIndex} input`).prop('disabled', false);
                // $(`#manual_exchange_${rowIndex}`).show();
            } else {
                // Hide manual exchange rate field when "Fetch From API" is selected
                $(`#manual_exchange_${rowIndex} input`).prop('disabled', true);
            }

            // Update forex amount calculation
            updateForexAmount(rowIndex);
        }
    </script>
    
    <script>
      const employeeCompanyName = "<?php echo e($employee->department->BusinessUnit->company->company_name); ?>";
      function validateForm() {
        const fileInput = document.getElementById('attachment_1');
        if (employeeCompanyName === "Tripack Films Limited") {
    
            if (!fileInput.files.length) {
              $('#attachmentRequiredModal').modal('show');
              return false;
            }
        
            return true;
          }
      }
    </script>
    
    <script>
    function handleAttachmentChange(input) {
        const container = input.closest(".attachment-icon");
        if (!container) return;
        console.log(container);
        const fileNameSpan = container.querySelector(".file-name");
        const fileStatusSpan = container.querySelector(".file-status");
    
        if (input.files && input.files.length > 0) {
            fileNameSpan.innerText = input.files[0].name;
            fileStatusSpan.innerText = "✅";
            fileStatusSpan.style.color = "green";
        } else {
            fileNameSpan.innerText = "No file selected";
            fileStatusSpan.innerText = "";
        }
}
</script>



<?php $__env->stopSection(); ?>

<div class="modal fade" id="attachmentRequiredModal" tabindex="-1" role="dialog" aria-labelledby="attachmentRequiredModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header bg-danger text-white">
        <h5 class="modal-title" id="attachmentRequiredModalLabel">Attachment Required</h5>
        <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        Please upload the required attachment before submitting the form.
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-danger" data-dismiss="modal">OK</button>
      </div>
    </div>
  </div>
</div>

<?php echo $__env->make('layouts.ers-layout', array_except(get_defined_vars(), array('__data', '__path')))->render(); ?>